services:
  mysql:
    image: mysql:8.0
    container_name: github-pr-mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-rootpassword}"
      MYSQL_DATABASE: github_prs
      MYSQL_USER: pruser
      MYSQL_PASSWORD: prpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: github-pr-app
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=pruser
      - DB_PASSWORD=prpassword
      - DB_NAME=github_prs
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPOS=${GITHUB_REPOS}
      - FETCH_SINCE_DAYS=${FETCH_SINCE_DAYS:-30}
    volumes:
      - ./:/app

  web-ui:
    build:
      context: ./web-ui
      dockerfile: Dockerfile
    container_name: github-pr-web-ui
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=pruser
      - DB_PASSWORD=prpassword
      - DB_NAME=github_prs
    depends_on:
      - mysql
      - app
    volumes:
      - ./web-ui:/app

  # Service for scheduled updates
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: github-pr-scheduler
    command: sh -c "while true; do /app/github-pr-tracker; sleep ${UPDATE_INTERVAL:-3600}; done"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=pruser
      - DB_PASSWORD=prpassword
      - DB_NAME=github_prs
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPOS=${GITHUB_REPOS}
      - FETCH_SINCE_DAYS=${FETCH_SINCE_DAYS:-30}
    volumes:
      - ./:/app

  # AI PR reviewer service (database-only storage)
  ai-reviewer:
    build:
      context: ./ai-reviewer
      dockerfile: Dockerfile
    container_name: github-pr-ai-reviewer
    depends_on:
      mysql:
        condition: service_healthy
      app:
        condition: service_started
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=pruser
      - DB_PASSWORD=prpassword
      - DB_NAME=github_prs
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - MAX_PRS_TO_REVIEW=${MAX_PRS_TO_REVIEW:-10}
      - REVIEW_ONLY_OPEN_PRS=${REVIEW_ONLY_OPEN_PRS:-true}
      - DAYS_SINCE_UPDATE=${DAYS_SINCE_UPDATE:-7}
      - INITIAL_WAIT_TIME=${INITIAL_WAIT_TIME:-120}
      - AI_REVIEW_INTERVAL=${AI_REVIEW_INTERVAL:-7200}
    restart: on-failure
    entrypoint: /bin/bash
    command: /app/run.sh
    volumes:
      - ./ai-reviewer:/app
      - pr-coordination:/coordination
      
  # New PR Exporter service
  pr-exporter:
    build:
      context: ./pr-exporter
      dockerfile: Dockerfile
    container_name: github-pr-exporter
    depends_on:
      mysql:
        condition: service_healthy
      ai-reviewer:
        condition: service_started
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=pruser
      - DB_PASSWORD=prpassword
      - DB_NAME=github_prs
      - OUTPUT_DIR=/app/exported_prs
      - EXPORT_CHECK_INTERVAL=${EXPORT_CHECK_INTERVAL:-30}
    # Use a shared volume with ai-reviewer to coordinate
    volumes:
      - ./pr-exporter:/app
      - ./exported_prs:/app/exported_prs
      - pr-coordination:/coordination
    entrypoint: /bin/bash
    command: /app/run.sh

volumes:
  mysql-data:
  pr-coordination: